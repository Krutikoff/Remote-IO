#ifndef Registers_H
#define Registers_H

//pragma once

#include <mb.h>






//#include <stdint.h>


/* Registers protocol Modbus */
typedef enum {
	COIL,
	DISCRETE,
	HOLDING,
	INPUT

} RegisterType;

typedef enum : uint8_t {
	GPIO_SET_BIT0,
	GPIO_SET_BIT1,
	GPIO_SET_BIT2,
	GPIO_SET_BIT3,
	GPIO_SET_BIT4,
	GPIO_SET_BIT5,
	GPIO_SET_BIT6,
	GPIO_SET_BIT7,
	GPIO_WRITE_BIT0,
	GPIO_WRITE_BIT1,
	GPIO_WRITE_BIT2,
	GPIO_WRITE_BIT3,
	GPIO_WRITE_BIT4,
	GPIO_WRITE_BIT5,
	GPIO_WRITE_BIT6,
	GPIO_WRITE_BIT7,
	LATCH_CLEAR,
	COUNTER0_CLEAR,
	COUNTER1_CLEAR,
	COUNTER2_CLEAR,
	COUNTER3_CLEAR,
	COUNTER4_CLEAR,
	COUNTER5_CLEAR,
	COUNTER6_CLEAR,
	COUNTER7_CLEAR,
	I2C_ENABLE,
	I2C_START,
	I2C_STOP,
	I2C_START_CONDITION,
	I2C_ADDR_SEND,
	I2C_RXNE,
	I2C_TXE
}Coil;

typedef enum : uint8_t {
	GPIO_READ_BIT0,
	GPIO_READ_BIT1,
	GPIO_READ_BIT2,
	GPIO_READ_BIT3,
	GPIO_READ_BIT4,
	GPIO_READ_BIT5,
	GPIO_READ_BIT6,
	GPIO_READ_BIT7,
	LATCH0_LOW,
	LATCH1_LOW,
	LATCH2_LOW,
	LATCH3_LOW,
	LATCH4_LOW,
	LATCH5_LOW,
	LATCH6_LOW,
	LATCH7_LOW,
	LATCH0_HIGH,
	LATCH1_HIGH,
	LATCH2_HIGH,
	LATCH3_HIGH,
	LATCH4_HIGH,
	LATCH5_HIGH,
	LATCH6_HIGH,
	LATCH7_HIGH
}Discrete;


typedef enum : uint8_t {
	COUNTER0_VALUE,
	COUNTER1_VALUE,
	COUNTER2_VALUE,
	COUNTER3_VALUE,
	COUNTER4_VALUE,
	COUNTER5_VALUE,
	COUNTER6_VALUE,
	COUNTER7_VALUE,
	I2C_RX_DATA
}Input;

typedef enum : uint8_t {
	UART_BAUDRATE_0,
	UART_BAUDRATE_1,
	I2C_TX_DATA
}Holding;




#endif /* REGISTERS_H_ */
